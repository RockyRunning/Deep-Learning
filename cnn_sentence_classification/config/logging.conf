# ??logger???root??????????????????
# logging.getLogger(NAME)?????logging???????????
# name ?? . ?? log ?????
[loggers]
keys=root,infoLogger,errorLogger

# ??handler
[handlers]
keys=infoHandler,errorHandler

# ???????
[formatters]
keys=infoFmt,errorFmt

#--------------------------------------------------
# ???????logger??????[logger_xxxx]?????
#--------------------------------------------------
# [logger_xxxx] logger_????
# level     ??????DEBUG?INFO?WARNING?ERROR?CRITICAL
# handlers  ???????????????
# qualname  logger????????? logging.getLogger?????????????????root???
# propagate ???????log???0:? 1:?
[logger_root]
level=INFO
handlers=errorHandler

[logger_errorLogger]
level=ERROR
handlers=errorHandler
propagate=0
qualname=errorLogger

[logger_infoLogger]
level=INFO
handlers=infoHandler
propagate=0
qualname=infoLogger

#--------------------------------------------------
# handler
#--------------------------------------------------
# [handler_xxxx]
# class handler??
# level ????
# formatter??????formatter
# args handler???????

[handler_infoHandler]
class=logging.FileHandler
level=INFO
formatter=infoFmt
args=('../log/info.log',)

[handler_errorHandler]
class=logging.FileHandler
level=ERROR
formatter=errorFmt
# When computing the next rollover time for the first time (when the handler is created),
# the last modification time of an existing log file, or else the current time,
# is used to compute when the next rotation will occur.
args=('../log/error.log',)

#--------------------------------------------------
# ????
#--------------------------------------------------
# %(asctime)s       ?-?-? ?-?-?,?? 2013-04-26 20:10:43,745
# %(filename)s      ????????
# %(pathname)s      ????????
# %(funcName)s      ???
# %(levelname)s     ???
# %(lineno)d        ??
# %(module)s        ???
# %(message)s       ???
# %(name)s          ?????
# %(process)d       ??id
# %(processName)s   ???
# %(thread)d        ??id
# %(threadName)s    ???

[formatter_infoFmt]
format=%(asctime)s %(levelname)s %(message)s
datefmt=
class=logging.Formatter

[formatter_errorFmt]
format=%(asctime)s %(levelname)s %(message)s
datefmt=
class=logging.Formatter